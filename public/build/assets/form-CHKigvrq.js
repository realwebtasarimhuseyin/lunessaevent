var m=Object.defineProperty;var s=(r,e,i)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[e]=i;var l=(r,e,i)=>s(r,typeof e!="symbol"?e+"":e,i);import{u as n}from"./real-ZMtuIudR.js";class d{constructor(){l(this,"hizmetKategoriGorsel",null);const{FormKontrol:e,FilePonds:i}=n();this.FormKontrol=e,this.FilePonds=i,this.init()}init(){this.HizmetKategoriFormElement()}HizmetKategoriFormElement(){const e=this;e.hizmetKategoriGorsel=e.FilePonds("#kategoriResim",{allowMultiple:!1,maxFiles:1,labelIdle:'Resminizi Sürükleyip Bırakın veya <span class="filepond--label-action">Tarayıcıdan Ekleyin</span>',acceptedFileTypes:["image/png","image/jpeg","image/webp","image/svg+xml"],maxFileSize:"10MB"}),typeof hizmetKategoriResimUrl<"u"&&e.hizmetKategoriGorsel.addFile(hizmetKategoriResimUrl)}HizmetKategoriVeriler(){const e=this;let i=new FormData;diller.forEach(t=>{let o={[`isim_${t}`]:$(`#hizmetKategoriForm #isim-${t}`).val()};i.append(`${t}`,JSON.stringify(o))});let a=e.hizmetKategoriGorsel.getFiles();return a.length>0&&a.forEach((t,o)=>{i.append("kategoriResim",t.file)}),$("#hizmetKategoriForm #durum").is(":checked")?i.append("durum",1):i.append("durum",0),i}HizmetKategoriFormKontrol(){const e=this,i="hizmetKategoriForm";let a={isim:$(`#hizmetKategoriForm #isim-${varsayilanDil}`).val()};const t=[{label:"Başlık",name:`isim-${varsayilanDil}`,value:a.isim,required:!0}];return e.FormKontrol().validate(i,t)}}export{d as R};
