var s=Object.defineProperty;var n=(i,e,r)=>e in i?s(i,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[e]=r;var t=(i,e,r)=>n(i,typeof e!="symbol"?e+"":e,r);import{u as m}from"./real-ZMtuIudR.js";class F{constructor(){t(this,"projeKategoriGorsel",null);const{FormKontrol:e,FilePonds:r}=m();this.FormKontrol=e,this.FilePonds=r,this.init()}init(){this.ProjeKategoriFormElement()}ProjeKategoriFormElement(){const e=this;e.projeKategoriGorsel=e.FilePonds("#kategoriResim",{allowMultiple:!1,maxFiles:1,labelIdle:'Resminizi Sürükleyip Bırakın veya <span class="filepond--label-action">Tarayıcıdan Ekleyin</span>',acceptedFileTypes:["image/png","image/jpeg","image/webp","image/svg+xml"],maxFileSize:"10MB"}),typeof projeKategoriResimUrl<"u"&&e.projeKategoriGorsel.addFile(projeKategoriResimUrl)}ProjeKategoriVeriler(){const e=this;let r=new FormData;diller.forEach(o=>{let l={[`isim_${o}`]:$(`#projeKategoriForm #isim-${o}`).val()};r.append(`${o}`,JSON.stringify(l))});let a=e.projeKategoriGorsel.getFiles();return a.length>0&&a.forEach((o,l)=>{r.append("kategoriResim",o.file)}),$("#projeKategoriForm #durum").is(":checked")?r.append("durum",1):r.append("durum",0),r}ProjeKategoriFormKontrol(){const e=this,r="projeKategoriForm";let a={isim:$(`#projeKategoriForm #isim-${varsayilanDil}`).val()};const o=[{label:"Başlık",name:`isim-${varsayilanDil}`,value:a.isim,required:!0}];return e.FormKontrol().validate(r,o)}}export{F as R};
